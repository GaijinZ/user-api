version: "1.24.1"

services:
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: userapi
      POSTGRES_PASSWORD: userapi
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pgconf:/etc/postgresql
      - pglog:/var/log/postgresql
    healthcheck:
      test: ["CMD", "pg_isready", "-U" ,"userapi"]
      interval: 30s
      timeout: 60s
      retries: 5

  cassandra:
    image: cassandra
    container_name: cassandra
    restart: always
    ports:
      - 9042:9042
      - 9160:9160
    volumes:
      - /cassandra/data:/var/lib/cassandra
    healthcheck:
      test: [ "CMD", "cqlsh", "-u cassandra", "-p cassandra", "-e describe keyspaces" ]
      interval: 15s
      timeout: 10s
      retries: 10

  cassandra-load-keyspace:
    container_name: cassandra-load-keyspace
    image: cassandra
    depends_on:
      cassandra:
        condition: service_healthy
    volumes:
      - ./init-scripts/cassandra_init.cql:/cassandra_init.cql
    command: /bin/bash -c "echo loading cassandra keyspace && cqlsh cassandra -f /cassandra_init.cql"

  userapi:
    depends_on:
      cassandra:
        condition: service_healthy
      postgres:
        condition: service_healthy
    build: /vagrant_data
    container_name: userapi
    restart: always
    ports: 
      - 9500:9500
  
  zookeeper:
    image: 'bitnami/zookeeper'
    hostname: zookeeper
    restart: always
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ./data/vol/zoo1/data:/data
      - ./data/vol/zoo1/datalog:/datalog

  # kafka:
  #   image: 'bitnami/kafka'
  #   container_name: kafka
  #   hostname: kafka
  #   restart: always
  #   ports:
  #     - 9092
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://192.168.33.2:9092
  #     - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
  #   volumes:
  #     - /kafka:/bitnami/kafka/data
  #   depends_on:
  #     - zookeeper
 
  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - '6379:6379'

volumes:
  pgdata:
  pgconf:
  pglog: 